{"version":3,"sources":["game/interface/Score.js","game/setting/Square.js","game/setting/setting.js","game/game.js","game/Snake.js","game/interface/Menu.js","game/Food.js","game/interface/Help.js","game/interface/PauseWrap.js","App.js","index.js"],"names":["Score","className","this","props","score","React","Component","Square","createInnerStyle","position","width","sw","height","sh","left","x","top","y","transform","rotateDeg","class","style","operationMode","clickMode","keyboardMode","pauseClick","ev","key","direction","directionNum","right","up","down","event","e","x1","pageX","y1","pageY","snakeHead","document","getElementsByClassName","snakeHeadPos","element","actualLeft","offsetLeft","current","offsetParent","actualTop","offsetTop","clientTop","getElementPagePosition","newDirection","x0","y0","dx","dy","k","angle","Math","atan","PI","calculateDirection","doubleClickPause","status","gameStatus","changeGameStatus","game","gameStartOrContinue","timer","clearInterval","setInterval","getNextPos","forceUpdate","addEventListener","keydownFn","clickFn","doubleClickPauseFn","gamePause","removeEventListener","gameEnd","linkList","alertGameScore","Snake","createSquare","toString","deg","rotate","initialize","pos","push","snakeBody1","snakeBody2","len","length","nextPos","foodPos","display","eatFood","strategies","eat","dieBySelf","forEach","value","console","log","die","td","tr","move","getSnakePos","format","nextX","nextY","newBody","newHead","pop","shift","call","undefined","Menu","state","startBtnDisabled","pauseBtnDisabled","pauseBtnName","startBtnHover","pauseBtnHover","helpBtnHover","handleClick","btnType","setState","changeHelpWrap","handleHover","type","nextProps","nextState","disabled","onClick","onMouseOver","onMouseLeave","Food","createFood","foodChangePos","snakePos","inSnake","round","random","getFoodPos","Help","handleClose","PauseWrap","App","helpWrap","alert","gameInit","foodCompenent","getScore","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3a96ceb0.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass Score extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"scoreWrap\">Score: {this.props.score}</div>\r\n        )       \r\n    }\r\n}\r\n\r\nexport default Score\r\n","import React from 'react'\r\n\r\n// 接收参数：1.方块宽sw、方块高sh\r\n//          2.x坐标、y坐标、方块类型\r\nclass Square extends React.Component {\r\n\r\n    createInnerStyle = () => {\r\n        const innerStyle = {\r\n            position: \"absolute\",\r\n            width: this.props.sw + \"px\",\r\n            height: this.props.sh + \"px\",\r\n            left: this.props.x * this.props.sw + 'px',\r\n            top: this.props.y * this.props.sh + 'px',\r\n            transform: 'rotate(' + this.props.rotateDeg + 'deg)',\r\n        }\r\n        return innerStyle;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className={this.props.class}\r\n                style={this.createInnerStyle()}>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Square\r\n\r\n\r\n","function operationMode(){\r\n    this.clickMode = null;\r\n    this.keyboardMode = null;\r\n    this.pauseClick = null;\r\n}\r\n\r\n// 可以加个在移动间隔时间内只能改变一次方向\r\noperationMode.keyboardMode = function(ev){\r\n    // alert(ev.code); // 显示键盘字符串\r\n    if (ev.key == 'd' && this.direction != this.directionNum.left){\r\n        this.direction = this.directionNum.right;\r\n    } else if (ev.key == 's' && this.direction != this.directionNum.up){\r\n        this.direction = this.directionNum.down;\r\n    } else if (ev.key == 'a' && this.direction != this.directionNum.right){\r\n        this.direction = this.directionNum.left;\r\n    } else if (ev.key == 'w' && this.direction != this.directionNum.down){\r\n            this.direction = this.directionNum.up;\r\n    } else if (ev.key == 'q'){\r\n        //pauseBtn.onclick();\r\n    }\r\n//     console.log('keyboardMode this:',this); //这里的this是指snake，它在运行的时候需要绑定\r\n}\r\n\r\n\r\noperationMode.clickMode = function(event) {\r\n    var e = event;\r\n    // console.log(e);\r\n    const x1 = e.pageX;\r\n    const y1 = e.pageY;\r\n\r\n    var snakeHead = document.getElementsByClassName('snakeHead')[0];\r\n    if (snakeHead){\r\n\r\n        const snakeHeadPos = getElementPagePosition(snakeHead);\r\n        const x0 = snakeHeadPos.x;\r\n        const y0 = snakeHeadPos.y;\r\n        const newDirection = calculateDirection(x0,y0,x1,y1);\r\n        // console.log(newDirection);\r\n\r\n        if (newDirection == 'right' && this.direction != this.directionNum.left){\r\n            this.direction = this.directionNum.right;\r\n        } else if (newDirection == 'down' && this.direction != this.directionNum.up){\r\n            this.direction = this.directionNum.down;\r\n        } else if (newDirection == 'left' && this.direction != this.directionNum.right){\r\n            this.direction = this.directionNum.left;\r\n        } else if (newDirection == 'up' && this.direction != this.directionNum.down){\r\n            this.direction = this.directionNum.up;\r\n        }\r\n    }\r\n    \r\n    return {'x':e.pageX,'y':e.pageY};\r\n}\r\n\r\nfunction getElementPagePosition(element){\r\n    //计算x坐标\r\n    var actualLeft = element.offsetLeft;\r\n    var current = element.offsetParent;\r\n    while (current !== null){\r\n      actualLeft += current.offsetLeft;\r\n      current = current.offsetParent;\r\n    }\r\n    //计算y坐标\r\n    var actualTop = element.offsetTop;\r\n    var current = element.offsetParent;\r\n    while (current !== null){\r\n      actualTop += (current.offsetTop+current.clientTop);\r\n      current = current.offsetParent;\r\n    }\r\n    //返回结果\r\n    return {x: actualLeft, y: actualTop}\r\n  }\r\n\r\n\r\nfunction calculateDirection(x0,y0,x1,y1){\r\n    if (x0 == x1){\r\n        if (y1 >= y0){\r\n            return 'down';\r\n        } else{\r\n            return 'up';\r\n        }\r\n    } else{\r\n        const dx = x1-x0;\r\n        const dy = y1-y0;\r\n        const k = dy/dx;\r\n        let angle = Math.atan(k) * 180 / Math.PI;\r\n        if (dx > 0 && dy < 0){\r\n            angle += 360;\r\n        } else if((dx < 0 && dy < 0) || (dx < 0 && dy >= 0)){\r\n            angle += 180;\r\n        }\r\n        // console.log(angle);\r\n\r\n        if (angle >= 315 || angle < 45){\r\n            return 'right';\r\n        } else if(angle < 315 && angle >= 225){\r\n            return 'up';\r\n        } else if(angle < 225 && angle >= 135){\r\n            return 'left';\r\n        } else{\r\n            return 'down';\r\n        }\r\n    }\r\n}\r\n\r\noperationMode.doubleClickPause = function(ev){\r\n    const status = this.props.gameStatus;\r\n    if (status === 'pause') {\r\n        this.props.changeGameStatus('playing');  // 会刷新一次Snake组件的渲染\r\n    }else if (status === 'playing') {\r\n        this.props.changeGameStatus('pause');\r\n    }\r\n}\r\n\r\nexport default operationMode\r\n","\r\n// 使用前需绑定snake对象\r\nfunction game() {\r\n    this.game = null;\r\n}\r\n\r\ngame.gameStartOrContinue = function() {\r\n    if(this.timer !== null){\r\n        clearInterval(this.timer); // 清除掉重新渲染前的timer\r\n    }\r\n    this.timer = setInterval(() => {\r\n        this.getNextPos();\r\n        this.forceUpdate();\r\n    }, 100); //200\r\n    // console.log('gameStartOrContinue exec:',this.timer)\r\n    //添加监听事件\r\n\r\n    document.addEventListener('keydown',this.keydownFn);\r\n    document.addEventListener('click',this.clickFn);\r\n    document.addEventListener('dblclick',this.doubleClickPauseFn);\r\n    // document.addEventListener('keydown',event => operationMode.keyboardMode.call(this,event))\r\n    // document.addEventListener('keydown',function(){console.log('keydown')})\r\n}\r\n\r\ngame.gamePause = function() {\r\n    clearInterval(this.timer);\r\n    // console.log('gamePause exec:',this.timer)\r\n    document.removeEventListener('keydown',this.keydownFn);\r\n    document.removeEventListener('click',this.clickFn);\r\n    // document.removeEventListener('keydown',event => operationMode.keyboardMode.call(this,event));\r\n    // document.removeEventListener('keydown',function(){console.log('keydown')})\r\n}\r\n\r\ngame.gameEnd = function() {\r\n    clearInterval(this.timer);\r\n    this.linkList = [];\r\n    this.props.changeGameStatus('init');\r\n    // this.initialize();\r\n    // this.props.gameInit(this.pos);\r\n\r\n    // 移除监听事件\r\n    document.removeEventListener('keydown',this.keydownFn);\r\n    document.removeEventListener('click',this.clickFn)\r\n    document.removeEventListener('dblclick',this.doubleClickPauseFn);\r\n    this.props.alertGameScore();\r\n\r\n}\r\n\r\nexport default game;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Square from './setting/Square';\r\nimport operationMode from './setting/setting';\r\nimport game from './game'\r\n// console.log('operationMode:',operationMode.keyboardMode)\r\n// console.log('game:',game.gameEnd)\r\n\r\n// 输入：食物位置，游戏状态,方块宽sw、方块高sh\r\n// 输出：蛇位置，游戏状态，吃食物\r\nclass Snake extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        // this.head = null;\r\n        // this.tail = null;\r\n        this.pos = [];\r\n\r\n        this.linkList = []; // 尾 ->身体 -> 头\r\n        this.timer = null;\r\n        this.keydownFn = event => operationMode.keyboardMode.call(this,event); //提前绑定this，使监听事件能有效移除\r\n        this.clickFn = event => operationMode.clickMode.call(this, event);\r\n        this.doubleClickPauseFn = event => operationMode.doubleClickPause.call(this,event);\r\n\r\n        this.directionNum = {\r\n            left:{\r\n                x:-1,\r\n                y:0,\r\n                rotate:180,\r\n            },\r\n            right:{\r\n                x:1,\r\n                y:0,\r\n                rotate:0,\r\n            },\r\n            up:{\r\n                x:0,\r\n                y:-1,\r\n                rotate:-90,\r\n            },\r\n            down:{\r\n                x:0,\r\n                y:1,\r\n                rotate:90,\r\n            }\r\n           \r\n        \r\n        }\r\n        this.direction = this.directionNum.right;\r\n    }\r\n\r\n    createSquare = (x,y,className) => {\r\n        const sw=this.props.sw, sh=this.props.sh;\r\n        const key = x.toString() + y.toString();\r\n        const deg = className === \"snakeHead\"\r\n                  ? this.direction.rotate\r\n                  : 0;\r\n        return (\r\n            <Square x={x} y={y} class={className} \r\n            sw={sw} sh={sh} key={key}\r\n            rotateDeg={deg}></Square>\r\n        )\r\n    }\r\n\r\n    initialize = () => {\r\n        this.pos = [];\r\n        this.direction = this.directionNum.right;\r\n\r\n        let snakeHead = this.createSquare(2,0,'snakeHead');\r\n        // this.head = snakeHead;\r\n        this.pos.push([2,0]);\r\n\r\n        let snakeBody1 = this.createSquare(1,0,'snakeBody');\r\n        this.pos.push([1,0]);\r\n\r\n        let snakeBody2 = this.createSquare(0,0,'snakeBody');\r\n        // this.tail = snakeBody2;\r\n        this.pos.push([0,0]);\r\n\r\n        this.linkList = [snakeBody2,snakeBody1,snakeHead];\r\n\r\n        // console.log('snakeHead:',snakeHead.props)\r\n        \r\n\r\n        return this.linkList;\r\n\r\n    }\r\n\r\n    getNextPos = () => {\r\n        const len = this.linkList.length;\r\n        const td = 30,tr = 30;\r\n        let nextPos = [\r\n            this.linkList[len-1].props.x + this.direction.x,\r\n            this.linkList[len-1].props.y + this.direction.y,\r\n        ];\r\n\r\n        //下个点是食物\r\n        // console.log('蛇感知食物位置getNextPos ',this.props.foodPos,nextPos)\r\n        if(this.props.foodPos[0] === nextPos[0] && this.props.foodPos[1] === nextPos[1]){\r\n            foodDisappear(); //提前把食物吃掉，保持动画合理性\r\n            this.props.eatFood(this.pos);\r\n            this.strategies.eat();           \r\n            return null;\r\n        }\r\n        \r\n        \r\n        //下个点是自己\r\n        let dieBySelf = false;\r\n        this.pos.forEach(value => {           \r\n            if(value[0] == nextPos[0] && value[1] === nextPos[1]){\r\n                console.log(\"撞到自己了\")\r\n                this.strategies.die();\r\n                dieBySelf = true;\r\n            }\r\n        })\r\n        if(dieBySelf){return null;}\r\n\r\n        //下个点是墙\r\n        if (nextPos[0] < 0 || nextPos[1] < 0 || nextPos[0] > td - 1 || nextPos[1] > tr - 1){\r\n            console.log(\"撞到墙上了\")\r\n            this.strategies.die();\r\n            return null;\r\n        }\r\n\r\n\r\n\r\n        this.strategies.move();\r\n        this.props.getSnakePos(this.pos);\r\n        return null;\r\n\r\n    }\r\n\r\n    strategies = {\r\n        // format表示是否保留蛇尾\r\n        move: (format=false) => {\r\n            const len = this.linkList.length;\r\n            // props只能读取，不能修改\r\n            // this.linkList[len-1].props.class = \"snakeBody\"\r\n            const x = this.linkList[len-1].props.x,\r\n                  y = this.linkList[len-1].props.y,\r\n                  nextX = x + this.direction.x,\r\n                  nextY = y + this.direction.y;\r\n            \r\n            const newBody = this.createSquare(x,y,\"snakeBody\");\r\n            const newHead = this.createSquare(\r\n                nextX,\r\n                nextY,\r\n                \"snakeHead\",\r\n            )\r\n            // console.log('this.direction.x:',this.direction.x,' x:',x)\r\n\r\n            this.linkList.pop();\r\n            this.linkList.push(newBody);\r\n            this.linkList.push(newHead);\r\n            this.pos.push([nextX,nextY]);\r\n\r\n            if(!format){\r\n                this.linkList.shift();\r\n                this.pos.shift();\r\n            }\r\n        },\r\n        eat: () => {\r\n            this.strategies.move(true)\r\n            return null;\r\n        },\r\n        die: () =>{\r\n            // this.gameEnd();\r\n            game.gameEnd.call(this);\r\n            \r\n            return ''\r\n        }\r\n    }\r\n\r\n    // gameStartOrContinue = () => {\r\n    //     if(this.timer !== null){\r\n    //         clearInterval(this.timer); // 清除掉重新渲染前的timer\r\n    //     }\r\n    //     this.timer = setInterval(() => {\r\n    //         this.getNextPos();\r\n    //         this.forceUpdate();\r\n    //     }, 100); //200\r\n    //     console.log('gameStartOrContinue exec:',this.timer)\r\n    //     //添加监听事件\r\n\r\n    //     document.addEventListener('keydown',this.keydownFn);\r\n    //     // document.addEventListener('keydown',function(){console.log('keydown')})\r\n    // }\r\n    // gamePause = () => {\r\n    //     clearInterval(this.timer);\r\n    //     // console.log('gamePause exec:',this.timer)\r\n    //     document.removeEventListener('keydown',this.keydownFn);\r\n    //     // document.removeEventListener('keydown',event => operationMode.keyboardMode.call(this,event));\r\n    //     // document.removeEventListener('keydown',event => operationMode.keyboardMode.call(this,event));\r\n    //     // document.removeEventListener('keydown',function(){console.log('keydown')})\r\n    // }\r\n    // gameEnd = () => {\r\n    //     clearInterval(this.timer);\r\n    //     this.linkList = [];\r\n    //     this.props.changeGameStatus('');\r\n\r\n    //     // 移除监听事件\r\n    //     document.removeEventListener('keydown',event => operationMode.keyboardMode.call(this,event));\r\n\r\n    //     this.props.alertGameScore();\r\n\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.initialize();\r\n        this.props.getSnakePos(this.pos);\r\n        // this.props.changeGameStatus('init');\r\n        // const snakePos = [...this.pos];\r\n        // this.props.snakeInit(this.pos);\r\n\r\n        // console.log('蛇创建成功 this.props:',this.props)\r\n        // console.log('蛇创建成功 this.pos:',this.pos)           \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const status = this.props.gameStatus;\r\n        if(status === null || status === undefined || status === 'init'){\r\n            this.initialize();\r\n            // this.props.snakeInit(this.pos);\r\n        }else if (status === 'start') {\r\n            this.props.changeGameStatus('playing');  // 会刷新一次Snake组件的渲染\r\n            // this.gameStartOrContinue(); \r\n            // game.gameStartOrContinue.call(this);\r\n            // console.log('status === start or continue, gameStatus: ',this.props.gameStatus)          \r\n        }else if(status === 'playing'){\r\n            game.gameStartOrContinue.call(this);\r\n        }\r\n        else if (status === 'pause') {\r\n            // console.log(\"snake will pause\")\r\n            // this.gamePause();\r\n            game.gamePause.call(this);\r\n        }\r\n        // else if (status === 'end') {\r\n        //     // this.gameEnd();\r\n        //     // game.gameEnd.call(this);\r\n        //     this.initialize();\r\n        // }\r\n        // console.log('蛇更新成功 this.props:',this.pos,this.props) \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if(this.timer !== null){\r\n            clearInterval(this.timer); // 清除掉重新渲染前的timer\r\n        }\r\n    }\r\n\r\n    // handleGameStatus = () => {\r\n    //     const status = this.props.gameStatus;\r\n    //     if(status === null || status === undefined || status === ''){\r\n    //         this.initialize();\r\n    //         this.props.changeGameStatus('init');\r\n    //     }else if (status === 'start') {\r\n    //         this.props.changeGameStatus('playing');  // 会刷新一次Snake组件的渲染\r\n    //         this.gameStartOrContinue();           \r\n    //     }else if (status === 'pause') {\r\n    //         // console.log(\"snake will pause\")\r\n    //         this.gamePause();\r\n    //     }else if (status === 'end') {\r\n    //         this.gameEnd();\r\n    //     }   \r\n    // }\r\n\r\n    render() {       \r\n        // this.handleGameStatus();\r\n       \r\n        // console.log(\"Snake render status:\",status)\r\n        // console.log('蛇感知食物位置render ',this.props.foodPos) //没问题\r\n        return (\r\n                this.linkList\r\n            )\r\n    }\r\n}\r\n\r\nfunction foodDisappear(){\r\n    const food = document.getElementsByClassName('food')[0];\r\n    food.style.display = 'none';\r\n}\r\n\r\nexport default Snake\r\n\r\n\r\n","import React from 'react';\r\n\r\nclass Menu extends React.Component {\r\n\r\n    state = {\r\n        startBtnDisabled: false,\r\n        pauseBtnDisabled: true,\r\n        pauseBtnName: '暂停游戏',\r\n\r\n        startBtnHover: '',\r\n        pauseBtnHover: '',\r\n        helpBtnHover: '',\r\n    }\r\n    \r\n    handleClick = btnType => {\r\n        if(btnType === 'start'){\r\n            this.props.changeGameStatus('start');\r\n            this.setState(function(){\r\n                return {\r\n                    startBtnDisabled: true,\r\n                    pauseBtnDisabled: false,\r\n\r\n                    startBtnHover: '',\r\n                    helpBtnHover: '',\r\n                }\r\n            })\r\n        }else if(btnType === 'pause'){\r\n            if(this.props.gameStatus === 'pause'){\r\n                this.props.changeGameStatus('playing');\r\n                this.setState(function(){\r\n                    return {\r\n                        pauseBtnName: '暂停游戏',\r\n                    }\r\n                })\r\n            } else {\r\n                this.props.changeGameStatus('pause');\r\n                this.setState(function(){\r\n                    return {\r\n                        pauseBtnName: '继续游戏',\r\n                    }\r\n                })\r\n            }\r\n            \r\n        }else if(btnType === 'help'){\r\n            this.props.changeHelpWrap()\r\n        }\r\n    }\r\n\r\n    // 处理各个按钮的悬停事件\r\n    handleHover = (type) => {\r\n        if(type === 'startBtn'){\r\n            if(this.props.gameStatus === 'init' || !this.props.gameStatus){\r\n                this.setState(function(){\r\n                    return {\r\n                        startBtnHover: 'btn-hover',\r\n                    }\r\n                })\r\n                this.forceUpdate();\r\n            }\r\n        }else if(type === 'startBtn-leave'){\r\n            this.setState(function(){\r\n                return {\r\n                    startBtnHover: '',\r\n                }\r\n            })\r\n            this.forceUpdate();\r\n        }else if(type === 'helpBtn'){\r\n            if(this.props.gameStatus === 'init' || !this.props.gameStatus){\r\n                this.setState(function(){\r\n                    return {\r\n                        helpBtnHover: 'btn-hover',\r\n                    }\r\n                })\r\n                this.forceUpdate();\r\n            }\r\n        }else if(type === 'helpBtn-leave'){\r\n            this.setState(function(){\r\n                return {\r\n                    helpBtnHover: '',\r\n                }\r\n            })\r\n            this.forceUpdate();\r\n        }else if(type === 'pauseBtn'){\r\n            // if(this.props.gameStatus === 'playing'){\r\n                this.setState(function(){\r\n                    return {\r\n                        pauseBtnHover: 'btn-hover',\r\n                    }\r\n                })\r\n                this.forceUpdate();\r\n            // }\r\n        }else if(type === 'pauseBtn-leave'){\r\n            this.setState(function(){\r\n                return {\r\n                    pauseBtnHover: '',\r\n                }\r\n            })\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(nextProps,nextState) {\r\n        if(nextProps.gameStatus === this.props.gameStatus){\r\n            return false;\r\n        }\r\n        // console.log('nextProps:',nextProps,this.props)\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        // console.log('菜单render',this.props);\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"btn startBtn\" >\r\n                    <button className={this.state.startBtnHover} \r\n                       disabled={this.state.startBtnDisabled && this.props.gameStatus !== 'init'} \r\n                       onClick={() => this.handleClick('start')}\r\n                       onMouseOver={() => this.handleHover('startBtn')}\r\n                       onMouseLeave={() => this.handleHover('startBtn-leave')}>开始游戏</button>\r\n                </div>\r\n                <div className=\"btn pauseBtn\">\r\n                    <button className={this.state.pauseBtnHover} \r\n                      disabled={this.state.pauseBtnDisabled || this.props.gameStatus === 'init'} \r\n                      onClick={() => this.handleClick('pause')}\r\n                      onMouseOver={() => this.handleHover('pauseBtn')}\r\n                      onMouseLeave={() => this.handleHover('pauseBtn-leave')}>{this.state.pauseBtnName}</button>\r\n                </div>\r\n                <div className=\"btn helpBtn\">\r\n                    <button className={this.state.helpBtnHover} \r\n                      disabled={this.state.startBtnDisabled && this.props.gameStatus !== 'init'} \r\n                      onClick={() => this.handleClick('help')}\r\n                      onMouseOver={() => this.handleHover('helpBtn')}\r\n                      onMouseLeave={() => this.handleHover('helpBtn-leave')}>操作说明</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react'\r\nimport Square from './setting/Square';\r\n\r\n// 输入：食物是否需要改变位置，蛇的位置，sw、sh\r\n// 输出：食物的位置，JSX\r\n\r\nclass Food extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.x = null;\r\n        this.y = null;\r\n    }\r\n    createFood = () => {\r\n        if(this.x !== null && this.y !== null){\r\n            if(this.props.foodChangePos === undefined || this.props.snakePos === undefined || !this.props.foodChangePos){\r\n                return null;\r\n            }\r\n        }\r\n        // console.log('创建食物1 this.props',this.props)\r\n\r\n        let inSnake = true;\r\n        const td=30,tr=30;\r\n        while (inSnake){\r\n            this.x = Math.round(Math.random() * (td - 1));\r\n            this.y = Math.round(Math.random() * (tr - 1));\r\n            \r\n            // console.log('创建食物2 this.props',this.props)\r\n            inSnake = false;\r\n            this.props.snakePos.forEach((value) => {\r\n                // console.log('创建食物3 this.props',this)\r\n                if(this.x === value[0] && this.y === value[1]){\r\n                    inSnake = true;\r\n                }                \r\n            })\r\n            // include = false;\r\n        }\r\n        \r\n        \r\n        this.props.getFoodPos([this.x,this.y]);\r\n        // this.props.foodChangePos2False();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        // 这一次跟下一次不一样就应该更新\r\n        // console.log('食物是否应该更新，nextprops：',nextProps,'foodChangePos:',this.props.foodChangePos)\r\n        // foodChangePos变为true渲染一次(未成功)，再置为false渲染一次\r\n        return this.props.foodChangePos;\r\n        // return this.props.foodChangePos && !nextProps.foodChangePos; // 未成功\r\n        // return nextProps.foodChangePos; //食物位置未上报成功，以第二次渲染为准\r\n    }\r\n\r\n    render() {      \r\n        this.createFood();\r\n        const sw=this.props.sw, sh=this.props.sh;\r\n        const key = this.x.toString() + this.y.toString();\r\n        // console.log('食物render key: ',key)\r\n        return (\r\n            <Square x={this.x} y={this.y} sw={sw} sh={sh} class='food' key={key}></Square>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Food\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default class Help extends React.Component {\r\n    // handleClose = function() {\r\n    //     console.log('点击close')\r\n    //     this.parentNode.parentNode.classList.add('hide');\r\n\r\n    // }\r\n    handleClose = () => {\r\n        console.log('点击close')\r\n        this.props.changeHelpWrap();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div display='none' className='helpWrap'>\r\n                <div className='help'>\r\n                    <span className=\"close\" onClick={this.handleClose}>X</span>\r\n                    <p>操作说明：</p>\r\n                    <p>（鼠标/触屏）点击“开始游戏”按钮开始游戏,单击控制蛇头转向，双击暂停/继续游戏</p>\r\n                    <p>（按键）W-S-A-D：上-下-左-右，Q：暂停/开始</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default class PauseWrap extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='mask'>\r\n                <p>游戏暂停中...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Score from './game/interface/Score';\r\nimport Snake from './game/Snake';\r\nimport Menu from './game/interface/Menu.js';\r\nimport Food from './game/Food';\r\nimport Help from './game/interface/Help'\r\nimport PauseWrap from './game/interface/PauseWrap'\r\n\r\n// render只能渲染一层自定义组件\r\n// App: game\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.sw = 20;\r\n    this.sh = 20;\r\n  }\r\n\r\n  state = {\r\n    score: 0,\r\n    gameStatus: '', //init,start,playing,pause\r\n    foodChangePos: false, \r\n    snakePos: [],\r\n    foodPos: [],\r\n\r\n    helpWrap: true,\r\n  }\r\n\r\n  // getScore = () => {\r\n  //   this.setState(function(){\r\n  //     return {\r\n  //       score: this.state.score++,\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  alertGameScore = () => {\r\n    alert(`你的游戏得分为：${this.state.score}`);\r\n    this.setState(function(){\r\n      return {\r\n        score: 0,\r\n        // gameStatus: '', //init,start,playing,pause\r\n        foodChangePos: false, \r\n        snakePos: [],\r\n        foodPos: [],\r\n\r\n        helpWrap: false,\r\n      }\r\n    })\r\n  }\r\n\r\n  changeGameStatus = status => {\r\n    this.setState(function(){\r\n      return {\r\n        gameStatus: status,\r\n      }\r\n    })\r\n  }\r\n\r\n  gameInit = pos => {\r\n    console.log('snakeInit pos: ',pos)\r\n    this.setState(function(pos){\r\n      // console.log('snakeInit1 pos: ',pos)\r\n      return {\r\n        score: 0,\r\n        snakePos: pos,\r\n        gameStatus: 'init',\r\n\r\n        helpWrap: false,\r\n      }\r\n    })\r\n    // console.log('snakeInit2 pos: ',pos)\r\n  }\r\n\r\n  eatFood = pos => {\r\n    console.log('蛇吃食物',pos)\r\n    this.setState(function(){\r\n      return {\r\n        snakePos: pos,\r\n        foodChangePos: true,\r\n        score: this.state.score + 1,\r\n      }\r\n    })\r\n  }\r\n  \r\n  getSnakePos = pos => {\r\n    this.setState(function(){\r\n      return {\r\n        snakePos: pos,\r\n      }\r\n    })\r\n  }\r\n\r\n  getFoodPos = pos => {\r\n    // console.log('上报食物位置：',pos)\r\n    this.setState(function(){\r\n      return {\r\n        foodPos: pos,\r\n        foodChangePos: false,\r\n      }\r\n    })\r\n  }\r\n\r\n  foodCompenent = () => {\r\n    if(this.state.gameStatus === '' || this.state.gameStatus === 'init'){\r\n      return false;\r\n    }\r\n    // let food = false;\r\n    // if(this.state.foodChangePos){\r\n    //   food = (\r\n    //     <Food foodChangePos={this.state.foodChangePos} \r\n    //             snakePos={this.state.snakePos} \r\n    //             getFoodPos={this.getFoodPos}\r\n    //             sw={this.sw} sh={this.sh}></Food>\r\n    //   )\r\n      \r\n    // }else{\r\n    //   food = (\r\n    //     <Food\r\n    //       snakePos={this.state.snakePos} \r\n    //       getFoodPos={this.getFoodPos}\r\n    //       sw={this.sw} sh={this.sh}></Food>\r\n    //   )\r\n    // }\r\n    let food = <Food \r\n                  foodChangePos={this.state.foodChangePos}\r\n                  snakePos={this.state.snakePos} \r\n                  getFoodPos={this.getFoodPos}\r\n                  sw={this.sw} sh={this.sh}></Food>\r\n\r\n    return food;\r\n  }\r\n  changeHelpWrap = () => {\r\n    this.setState(function(){\r\n      return {\r\n        helpWrap: !this.state.helpWrap,\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    // console.log('游戏创建成功 this.state',this.state)\r\n  }\r\n  componentDidUpdate(){\r\n    // console.log('游戏更新成功 this.state',this.state)\r\n  }\r\n\r\n  render() {\r\n    // const snake = <Snake sw={this.sw} sh={this.sh}></Snake>;\r\n    // console.log(snake)\r\n    // for (let i=0;i<3;i++){\r\n    //   snake.getNextPos();\r\n    // }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n          {\r\n            this.state.helpWrap && (this.state.gameStatus === '' || this.state.gameStatus === 'init') && \r\n              <Help changeHelpWrap={this.changeHelpWrap}></Help>\r\n          }\r\n          {\r\n            this.state.gameStatus === 'pause' && <PauseWrap></PauseWrap>\r\n          }\r\n\r\n          <Score score={this.state.score} getScore={this.getScore} />\r\n          <Menu gameStatus={this.state.gameStatus}\r\n            changeGameStatus={this.changeGameStatus}\r\n            changeHelpWrap={this.changeHelpWrap}></Menu>\r\n\r\n          <div id=\"snakeWrap\">\r\n            {this.state.gameStatus !== 'end' &&\r\n            <Snake sw={this.sw} sh={this.sh} \r\n              gameStatus={this.state.gameStatus}\r\n              changeGameStatus={this.changeGameStatus}\r\n              gameInit={this.gameInit}\r\n              foodPos={this.state.foodPos}\r\n              getSnakePos={this.getSnakePos}\r\n              eatFood={this.eatFood}\r\n              alertGameScore={this.alertGameScore}></Snake>\r\n            }\r\n            {\r\n              this.foodCompenent()\r\n            }\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}